change log:

---- 1.5.9 ----
fixed BX count in BC0 lock check
fixed L1 ID to start from 1 rather than 0
FIFOs do not assert FULL during reset, so HAD_OVF flags shouldn't be set after reset anymore
fixed GBT loopback with OH in the loop

---- 1.5.10 ----
Fixed phase TXUSRCLK
GBT TX Latency Optimized mode

---- 1.7.0 ----
Slow control added:
  * GBTx internal control (lets write/read GBTx internal registers)
  * SCA controller
    - configures SCA chip during reset
    - resets OH FPGA on TTC hard reset command or user request
    - reads SCA ADC channels automatically and stores the values in registers (reading can be disabled by the user)
    - drives the SCA JTAG module based on data provided by the user on simple 32bit TMS and TDO registers, also reads TDI data when reading TDI reg
  * Improved ipbus-slave and generate_registers.py: provides write and read pulses and also write_done and read_ready signals can be used for transactional reads / writes

-- 1.8.6 no gbt sync procedure with oh
-- 1.8.7 advanced ILA trigger for gbt link
-- 1.8.8 tied unused 8b10b or gbt links to 0
-- 1.8.9 disable automatic phase shifting, just use unknown phase from 160MHz ref clock, also use bufg for the MMCM feedback clock
-- 1.8.9 special version with 8b10b main link moved to OH2 and longer IPBusBridge timeout (comms with OH are perfect, but can't read VFATs at all)
-- 1.9.0 fixed TX phase alignment, removed MMCM reset (was driven by the GTH startup FSM and messing things up).
         if 0 shifts are applied it's known to result in bad phase, so for now just made that if this happens, 
         then lock is never asserted, which will prevent GTH startup from completing and will be clearly visible during FPGA programming.
-- 1.9.1 using TTC 120MHz as the GBT common RX clock instead of recovered clock from the main link (so all links should work even if link 1 is not connected) 
-- 1.9.2 separate SCA controlers for each channel implemented. There's also inbuilt ability to broadcast JTAG and custom SCA commands to any set of selected channels
-- 1.9.3 Added SCA not ready counters (since last SCA reset). This will show if the SCA communication is stable (once established). If yes, we could add an automatic SCA reset + configure after each time the SCA ready goes high after being low.
